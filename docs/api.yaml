openapi: 3.0.0
info:
  title: Post Edit API
  version: 1.0.0
  description: An API for creating and editing a blog or blog-like platform
paths:
  /:
    get:
      summary: API Root
      description: ""
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"

  /users:
    get:
      summary: List Users
      description: ""
      tags: [Users]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        
  /users/{name}:
    get:
      summary: Get User by Name
      description: ""
      tags: [Users]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /auth/register:
    post:
      summary: "Register a new user"
      description: ""
      tags: [Account Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:  
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /auth/login:
    post:
      summary: "Log in a user (get JWT token)"
      description: ""
      tags: [Account Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated or invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  
  /auth/reset-jwt-token:
    post:
      summary: "Reset JWT token"
      description: ""
      tags: [Account Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated or invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /auth/set-password:
    post:
      summary: "Set your password"
      description: ""
      tags: [Account Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated or invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /auth/delete:
    post:
      summary: "Delete  your account"
      description: ""
      tags: [Account Management]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/auth/reset-jwt-token:
    post:
      summary: "Reset JWT token"
      description: ""
      tags: [Account Management]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/auth/set-password:
    post:
      summary: "Set user password"
      description: ""
      tags: [Account Management]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                oldPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/auth/delete:
    delete:
      summary: "Delete user account"
      description: ""
      tags: [Account Management]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/profile:
    get:
      summary: "Get user profile"
      description: ""
      tags: [Profile]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Profile does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
        
  /users/{name}/profile/create:
    post:
      summary: "Create user profile"
      description: ""
      tags: [Profile]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                displayName:
                  type: string
                bio:
                  type: string
                about:
                  type: string
                profilePictureUrl:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/profile/edit:
    put:
      summary: "Edit user profile"
      description: ""
      tags: [Profile]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                displayName:
                  type: string
                bio:
                  type: string
                about:
                  type: string
                profilePictureUrl:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Profile does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/profile/delete:
    delete:
      summary: "Delete user profile"
      description: ""
      tags: [Profile]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Profile does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments:
    get:
      summary: "List comments on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments/create:
    post:
      summary: "Post a comment on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Parent user does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments/{id}:
    get:
      summary: "Get a comment on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments/{id}/reply:
    post:
      summary: "Reply to a comment on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Parent comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments/{id}/replies:
    get:
      summary: "List replies to a comment on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments/{id}/edit:
    put:
      summary: "Edit a comment on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/user-comments/{id}/delete:
    delete:
      summary: "Delete a comment on a user profile"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/post-comments:
    get:
      summary: "List comments posted by a user"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/post-comments/{id}:
    get:
      summary: "List comments on a post by a user"
      description: ""
      tags: [Profile, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts:
    get:
      summary: "List posts by a user"
      description: ""
      tags: [Posts]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/create:
    post:
      summary: "Create a new post for a user"
      description: ""
      tags: [Posts]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                postName:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Parent user does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}:
    get:
      summary: "Get a post by a user"
      description: ""
      tags: [Posts]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/edit:
    put:
      summary: "Edit a post by a user"
      description: ""
      tags: [Posts]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                postName:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/delete:
    delete:
      summary: "Delete a post by a user"
      description: ""
      tags: [Posts]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments:
    get:
      summary: "List comments on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments/create:
    post:
      summary: "Post a comment on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Parent post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments/{commentId}:
    get:
      summary: "Get a comment on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments/{commentId}/reply:
    post:
      summary: "Reply to a comment on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Parent comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments/{commentId}/replies:
    get:
      summary: "List replies to a comment on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments/{commentId}/edit:
    put:
      summary: "Edit a comment on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                content:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /users/{name}/posts/{id}/comments/{commentId}/delete:
    delete:
      summary: "Delete a comment on a post by a user"
      description: ""
      tags: [Posts, Comments]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Comment does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /profile:
    get:
      summary: "Get your profile"
      description: ""
      tags: [Profile]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '404':
          description: Profile does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /profile/create:
    post:
      summary: "Create your profile"
      description: ""
      tags: [Profile]
      requestBody:
        content:
          application/json:
            schema:
              properties:
                displayName:
                  type: string
                bio:
                  type: string
                about:
                  type: string
                profilePictureUrl:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '400':
          description: Profile already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /profile/edit:
    put:
      summary: "Edit your profile"
      description: ""
      tags: [Profile]
      requestBody:
        content:
          application/json:
            schema:
              properties:
                displayName:
                  type: string
                bio:
                  type: string
                about:
                  type: string
                profilePictureUrl:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Profile does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /profile/delete:
    delete:
      summary: "Delete your profile"
      description: ""
      tags: [Profile]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Profile does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /posts:
    get:
      summary: "List your posts"
      description: ""
      tags: [Posts]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        
  /posts/create:
    post:
      summary: "Create a new post"
      description: ""
      tags: [Posts]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        
  /posts/{id}:
    get:
      summary: "Get your post"
      description: ""
      tags: [Posts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
        '404':
          description: ""
  /posts/{id}/edit:
    put:
      summary: "Edit your post"
      description: ""
      tags: [Posts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /posts/{id}/delete:
    delete:
      summary: "Delete your post"
      description: ""
      tags: [Posts]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/success"
        '401':
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '403':
          description: Wrong user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        '404':
          description: Post does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        

components:
  schemas:
    success:
      type: object
      properties:
        message:
          type: string
          description: Success message
    error:
      type: object
      properties:
        error:
          type: string
          description: Error message
      